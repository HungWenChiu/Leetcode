/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    
    void get_sum(vector<vector<int>>& res, vector<int>& seq, TreeNode* node, int a, int sum){
        
        if(node == nullptr) return;
        
        seq.push_back(node->val);
        if(node->left == nullptr && node->right == nullptr && a + node->val == sum) // 結尾就是要一直找一直找直到找到是left的node為止
                res.push_back(seq);
        else
        {
            if(node->left) get_sum(res, seq, node->left, a + node->val, sum);
            if(node->right) get_sum(res, seq, node->right, a + node->val, sum);
        }
        seq.pop_back();
        
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        
        vector<vector<int>> res;
        vector<int> seq = {};
        get_sum(res, seq, root, 0, sum);
        
        return res;
    }
};
