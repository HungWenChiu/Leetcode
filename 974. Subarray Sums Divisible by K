// 使用dp

class Solution {
public:
    
    int subarraysDivByK(vector<int>& A, int K) {
                
        vector<int> sum = {0}; // 算出每個數字的壘加
        vector<int> dp(A.size() + 1, 0);
        int res = 0;
        
        for(auto e : A)
            sum.push_back(sum.back() + e);
        
        for(int i = 1; i < sum.size(); i++)
            for(int j = i - 1; j >= 0; j--)
            {
                if((sum[i] - sum[j]) % K == 0)
                {
                    dp[i] = dp[j] + 1;
                    res += dp[i];
                    break;
                }
            }
        
        return res;
    }
};


// 0, 4, 9, 9, 7, 4, 5
// [4]                                                              dp[1] = 0
// [4, 5] [5]                                                       dp[2] = 1
// [4,5,0] [5,0] [0]                                                dp[3]
// [4,5,0,-2] [5,0,-2] [0, -2][-2]
// [4,5,0,-2,-3] [5,0,-2,-3] [0, -2,-3][-2,-3][-3]
// [4,5,0,-2,-3,1] [5,0,-2,-3,1] [0, -2,-3,1][-2,-3,1][-3,1][1]
