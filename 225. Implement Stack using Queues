class MyStack {
    
private:
    queue<int> q1; // 用來放其他的element
    queue<int> q2; // 用來放最後進入的element
public:
    /** Initialize your data structure here. */
    MyStack() {
        
    }
    /** Push element x onto stack. */
    void push(int x) {
        if(!q2.empty())
        {
            q1.push(q2.front());
            q2.pop();
        }
        q2.push(x);
    }
    
    /** Removes the element on top of the stack and returns that element. */
    int pop() {
        
        int tmp = top();
        q2.pop();
        return tmp;
    }
    
    /** Get the top element. */
    int top() { // 會保證q2一定會有一個值(最頂端的值)
      
        if(q2.empty())
        {
            for(int i = 0; i < q1.size() - 1; i++)
            {
                q1.push(q1.front());
                q1.pop();
            }
            q2.push(q1.front());
            q1.pop();
        }
        
        return q2.front(); 
    }
    
    /** Returns whether the stack is empty. */
    bool empty() {
        
        return (q1.empty() && q2.empty());
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */
