/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
// iteration
// class Solution {
// public:
//     ListNode* reverseList(ListNode* head) {
        
//         ListNode *preptr = nullptr, *curptr = head;
        
//         while(curptr)
//         {
//             head = curptr->next;
//             curptr->next = preptr;
//             preptr = curptr;
//             curptr = head;
//         }
        
//         return preptr;
//     }
// };

// recursion
class Solution {
public:
    ListNode* reverse(ListNode* curptr, ListNode* preptr) {
        
        if(curptr == nullptr) return preptr;
        
        ListNode* tmp = curptr->next;
        curptr->next = preptr;
        return reverse(tmp, curptr);
        
    }
    ListNode* reverseList(ListNode* head) {
    
        return reverse(head, nullptr);
    }
};
