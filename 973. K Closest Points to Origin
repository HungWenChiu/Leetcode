class Solution {
public:
    
    struct Cmp{
     
        bool operator() (pair<long long int, pair<int, int>>& a, pair<long long int, pair<int, int>>& b){
            
            return a.first > b.first;
        }
    };
    
    vector<vector<int>> kClosest(vector<vector<int>>& points, int K) {
        
        vector<vector<int>> res;
        priority_queue<pair<long long int, pair<int, int>>, vector<pair<long long int, pair<int, int>>>, Cmp>pq;
        
        for(auto e : points)
        {
            long long int dist = e[0] * e[0] + e[1] * e[1];
            pq.push({dist, {e[0], e[1]}});
        }
        
        for(int i = 0; i < K; i++)
        {
            res.push_back({pq.top().second.first, pq.top().second.second});
            pq.pop();
        }
        return res;
        
    }
};
