/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

struct Cmp{
  
    bool operator() (ListNode* a, ListNode* b){
        return a->val > b->val;
    };
    
};

class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        
        ListNode* head = new ListNode();
        head->next = nullptr;
        ListNode* curptr = head;
        priority_queue<ListNode*, vector<ListNode*>, Cmp> pq;
        
        for(int i = 0; i < lists.size(); i++)
            if(lists[i])
                pq.push(lists[i]);
        
        while(pq.size() > 0)
        {
            ListNode* tmp = pq.top();
            if(pq.top()->next)
                pq.push(pq.top()->next);
            
            curptr->next = tmp;
            curptr = curptr->next;
            curptr->next = nullptr;
        
            pq.pop();
        }
        
        return head->next;
        
    }
};
