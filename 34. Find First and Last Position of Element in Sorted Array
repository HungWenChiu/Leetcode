// 使用binary search 找出第一個大於或等於target的元素

class Solution {
public:
    
    int find_lowbound(vector<int>& nums, int target){ // 找出第一個大於或等於target的元素
        
        int left = 0, right = nums.size() - 1;
        
        while(left <= right)
        {
            int mid = (left + right) / 2;
            
            if(nums[mid] < target)
                left = mid + 1;
            else
                right = mid - 1;
        }
        
        return left;
       
        
    }
    
    vector<int> searchRange(vector<int>& nums, int target) {
        
        int start = find_lowbound(nums, target);
        int end = find_lowbound(nums, target + 1);
        
        if(start == end)
            return {-1, -1};
        else
            return {start, end - 1};
        
    }
};
