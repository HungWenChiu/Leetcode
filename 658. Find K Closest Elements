// 因為是有序的，所以從左右兩邊開始刪除
// class Solution {
// public:
    
//     vector<int> findClosestElements(vector<int>& arr, int k, int x) {
        
//         while(arr.size() > k)
//         {
//             if(abs(arr.front() - x) <= abs(arr.back() - x))
//                 arr.pop_back();
//             else
//                 arr.erase(arr.begin());
//         }
        
//         return arr;

//     }
// };


// 方法二 使用二分搜尋法找起始位置
class Solution {
public:
    
    vector<int> findClosestElements(vector<int>& arr, int k, int x) {
        
        int left = 0, right = arr.size() - k;
        
        while(left < right)
        {
            int mid = left + (right - left) / 2;
            if(x - arr[mid] <= arr[mid + k] - x) 
                right = mid;
            else
                left = mid + 1;
        }
        return vector<int>(arr.begin() + left, arr.begin() + left + k);

    }
};
