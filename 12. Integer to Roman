class Solution {
public:
    
    string get_Rnum(int num, int digit){
        
        num *= pow(10, (digit - 1));
        
        switch(num)
        {
            case 1:
                return "I";
            case 4:
                return "IV";
            case 5:
                return "V";
            case 9:
                return "IX";
            case 10:
                return "X";
            case 40:
                return "XL";
            case 50:
                return "L";
            case 90:
                return "XC";
            case 100:
                return "C";
            case 400:
                return "CD";
            case 500:
                return "D";
            case 900:
                return "CM";
            case 1000:
                return "M";
            default:
                return "";
        }
        
    }
    
    string intToRoman(int num) {
        
        string result;
        stack<string> s;
        
        
        int digit = 0;
        while(num > 0)
        {
            int tmp = num % 10; // cal every number at each digit
            digit++;
           
            if(tmp == 4 || tmp == 9) // case 4 9 40 90 400 900
                s.push(get_Rnum(tmp, digit));
            else if(tmp < 5) // case 1  2  3 10 20 30 100 200 300 1000
            {
                for(int i = 1; i <= tmp; i++)
                    s.push(get_Rnum(1, digit));
            }
            else if(tmp >= 5) // case 5 6 7 8 50 60 70 80 500 600 700 800
            {
                tmp -= 5;
                for(int i = 1; i <= tmp; i++)
                    s.push(get_Rnum(1, digit)); // push I X C M
                s.push(get_Rnum(5, digit)); // push 5 50 500
            }
           
            num = num / 10; // get the next digit
        }
        while(!s.empty())
        {
            result += s.top();
            s.pop();
        }
        return result;
        
    }
};
