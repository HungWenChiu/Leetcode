/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void sort_vec(TreeNode* node, vector<int>& sorted_num){
        
        // if(node == nullptr)
        //     return;
        
        if(node->left != nullptr)
            sort_vec(node->left, sorted_num);
        
        sorted_num.push_back(node->val);
        
        if(node->right != nullptr)
            sort_vec(node->right, sorted_num);
        
    }
    
    int kthSmallest(TreeNode* root, int k) {
        
        if(root == nullptr)
            return 0;
        
        vector<int> sorted_num;
        sort_vec(root, sorted_num);
        return sorted_num[k-1];
        
    }
};
