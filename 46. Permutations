class Solution {
public:
    
    void get_sequence(vector<vector<int>> &res, vector<int> sub_array, vector<int> nums)
    {
        if(nums.empty())
        {
            res.push_back(sub_array);
            return;
        }
        else
        {
            
            for(int i = 0; i < nums.size(); i++)
            {
                vector<int> tmp = sub_array;
                vector<int> tmp2 = nums;
                tmp.push_back(nums[i]);
                tmp2.erase(tmp2.begin() + i);
                get_sequence(res, tmp, tmp2);
            }
        }
    }
    
    vector<vector<int>> permute(vector<int>& nums) {
        
        vector<vector<int>> res;
        
        if(nums.size() == 0 || nums.size() == 1)
            res.push_back(nums);
        else
            get_sequence(res, {}, nums);
        
        return res;
    }
};
