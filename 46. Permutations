class Solution {
public:
    
    void get_perm(vector<int>& nums, vector<vector<int>>& res, vector<int>& per){
        
        if(nums.size() == 0) // 表示數都被抽完了
        {
            res.push_back(per);
            return;
        }
         
        for(int i = 0; i < nums.size(); i++)
        {
            int tmp = nums[i];
            per.push_back(tmp); // 放一個數
            nums.erase(nums.begin() + i); // 把這數在nums抽掉
            get_perm(nums, res, per); // 剩餘的數字在做排列
            nums.insert(nums.begin() + i, tmp); // 把原本的數字加回來
            per.pop_back(); // 換下一個數排列,原本數字pop out
        }
    }
    
    vector<vector<int>> permute(vector<int>& nums) {
        
        vector<vector<int>> res;
        vector<int> per;
        get_perm(nums, res, per);
        return res;
    }
};
