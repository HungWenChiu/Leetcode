/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {

private:
    vector<int> result;
    stack<TreeNode*> stk;
    
public:
    vector<int> inorderTraversal(TreeNode* root) {
        
        TreeNode* curptr = root;
        while(curptr || !stk.empty())
        {
            while(curptr)
            {
                stk.push(curptr);
                curptr = curptr->left;
            }
            
            curptr = stk.top();
            result.push_back(curptr->val);
            stk.pop();
            curptr = curptr->right;
        }
        
        return result;
        
    }
    
  
    
};
