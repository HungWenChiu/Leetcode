// 概念: 使用 moore voting algorithm : https://ithelp.ithome.com.tw/articles/10213285
// 任意數組數字次數出現 > n / 3的最多不會超過兩個。
// proof: 反證法:
//  如果出現 > n / 3的數目超過兩個，最少3個，則整個數組數目會 > 3 * n / 3 = n 就會超過n個了，矛盾。
//  由此可知 > n / 3的數字不會大於2個
// 所以此提一定只會有兩個數

// Input: [1,1,1,3,3,2,2,2]
// Output: [1,2] 

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        
        int a = 0, b = 0;
        int cnt_a = 0, cnt_b = 0;
        vector<int> res;
        
        for(int i = 0; i < nums.size(); i++)
        {
            if(a == nums[i]) cnt_a++;
            else if(b == nums[i]) cnt_b++;
            else if(cnt_a == 0){ a = nums[i]; cnt_a = 1; }
            else if(cnt_b == 0){ b = nums[i]; cnt_b = 1; }
            else
            {
                cnt_a--; // 遇到不同的數的話，這兩個數的cnt各減掉一次，表示一次拿掉兩個數
                cnt_b--;
            }
        }
        
        cnt_a = 0;
        cnt_b = 0;
        
        for(int i = 0; i < nums.size(); i++)
        {
            if(nums[i] == a) cnt_a++;
            else if(nums[i] == b) cnt_b++;
        }
        
        if(cnt_a > nums.size() / 3) res.push_back(a);
        if(cnt_b > nums.size() / 3) res.push_back(b);
        
        return res;
    }
};
