// 用找shortest path 的方式
// 找每個點，每次都把上一跟左一的點的weight的minimun加上自己點的weight
// 之後最後一個點的weight一定就會是最小的weight

class Solution {
public:
    
    int minPathSum(vector<vector<int>>& grid) {
        
        vector<vector<int>> res(grid.size(), vector<int>(grid[0].size(), INT_MAX));
        res[0][0] = grid[0][0];
        
        for(int i = 0; i < grid.size(); i++)
            for(int j = 0; j < grid[0].size(); j++)
            {
                if(i == 0 && j == 0)
                    res[i][j] = grid[i][j];
                else
                {
                    if(i == 0)
                        res[i][j] = grid[i][j] + res[i][j - 1];
                    else if(j == 0)
                        res[i][j] = grid[i][j] + res[i - 1][j];
                    else
                        res[i][j] = grid[i][j] + min(res[i - 1][j], res[i][j - 1]);
                }
            }
        
        return res[grid.size() - 1][grid[0].size() - 1];
        
    }
};
