/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* merge(TreeNode* n1, TreeNode* n2){
        
        if(n1 == nullptr && n2 == nullptr)
            return nullptr;
        else if(n1 != nullptr && n2 == nullptr)
            return n1;
        else if(n1 == nullptr && n2 != nullptr)
            return n2;
        else
        {
            n1->val = n1->val + n2->val;
            n1->left = merge(n1->left, n2->left);
            n1->right = merge(n1->right, n2->right);
            return n1;
        }
        
    }
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
        
        TreeNode* res;
        res = merge(t1, t2);
        return res;
        
    }
};
