/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void DFS(TreeNode* node, int& sum, int tmp){
        
        tmp = (tmp * 10) + node->val;
        
        if(node->left == nullptr && node->right == nullptr) // 要左右兩邊都沒有child才是結尾
        {
            sum += tmp;
            return;
        }
        
        if(node->left != nullptr)
            DFS(node->left, sum, tmp);

        if(node->right != nullptr)
            DFS(node->right, sum, tmp);
    }
    
    int sumNumbers(TreeNode* root) {
        
        if(root == nullptr)
            return 0;
        
        int sum = 0;
        DFS(root, sum, 0);
        
        return sum;
    }
};
