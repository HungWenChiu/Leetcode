/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int get_max_sum(TreeNode* node, int& max_res){
        
        if(!node) return 0;
        int l_most = max(get_max_sum(node->left, max_res), 0);
        int r_most = max(get_max_sum(node->right, max_res), 0);
        
        max_res = max(max_res, node->val + l_most + r_most);
        return max(l_most, r_most) +  node->val;
        
    }
    
    int maxPathSum(TreeNode* root) {
        
        int max_res = INT_MIN;
        get_max_sum(root, max_res);
        return max_res;
    }
};

